{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewDoc.js\";\nimport React from \"react\";\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDoc(props) {\n  const {\n    initPerson,\n    initPersonDesc\n  } = props.personSection;\n  const {\n    workList,\n    respList\n  } = props.workSection;\n  const {\n    eduList,\n    eduDescList\n  } = props.eduSection;\n  const {\n    otherList,\n    otherDescList\n  } = props.otherSection;\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (respList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(respList).filter(sub => sub.split(\"_\")[0] === key).length;\n\n    if (DPcount === 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"view--work--desc\",\n        children: respList[subKey].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"view--work--desc\",\n          children: respList[subKey].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const conditionalDate = key => {\n    const start = key.start.value;\n    const end = key.end.value;\n\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view--CV\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--personal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view--personal--name\",\n          children: initPerson.personalName.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: initPersonDesc.personalD.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--personal--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: initPerson.personalLocation.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: initPerson.personalEmail.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: initPerson.personalLinkedIn.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: initPerson.personalPortfolio.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WORK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), Object.keys(workList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--work\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--titleBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: workList[key].company.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: workList[key].position.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [workList[key].start.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), conditionalDate(workList[key]), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [workList[key].end.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), Object.keys(respList).map(subKey => selectSubs(respList, key, subKey))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EDUCATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), Object.keys(eduList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--work\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--titleBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: eduList[key].university.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: eduList[key].degree.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [eduList[key].start.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), conditionalDate(eduList[key]), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [eduList[key].end.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), Object.keys(eduDescList).map(subKey => selectSubs(eduDescList, key, subKey))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ACHIEVEMENTS / EXTRACURRICULAR / OTHERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), Object.keys(otherList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--work\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--titleBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: otherList[key].university.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--work\",\n            children: otherList[key].degree.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [otherList[key].start.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), conditionalDate(eduList[key]), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [eduList[key].end.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), Object.keys(eduDescList).map(subKey => selectSubs(eduDescList, key, subKey))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ViewDoc;\nexport default ViewDoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDoc\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewDoc.js"],"names":["React","uniqid","ViewDoc","props","initPerson","initPersonDesc","personSection","workList","respList","workSection","eduList","eduDescList","eduSection","otherList","otherDescList","otherSection","selectSubs","list","key","subKey","primary","split","renderDP","DPcount","Object","keys","filter","sub","length","value","conditionalDate","start","end","personalName","personalD","personalLocation","personalEmail","personalLinkedIn","personalPortfolio","map","company","position","university","degree"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\n\nfunction ViewDoc(props) {\n  const { initPerson, initPersonDesc } = props.personSection;\n  const { workList, respList } = props.workSection;\n  const { eduList, eduDescList } = props.eduSection;\n  const { otherList, otherDescList } = props.otherSection;\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (respList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(respList).filter(\n      (sub) => sub.split(\"_\")[0] === key\n    ).length;\n    if (DPcount === 1) {\n      return <p className=\"view--work--desc\">{respList[subKey].value}</p>;\n    } else {\n      return (\n        <ul>\n          <li className=\"view--work--desc\">{respList[subKey].value}</li>\n        </ul>\n      );\n    }\n  };\n\n  const conditionalDate = (key) => {\n    const start = key.start.value;\n    const end = key.end.value;\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div className=\"view--CV\">\n      <div className=\"view--personal\">\n        <div>\n          <div className=\"view--personal--name\">\n            {initPerson.personalName.value}\n          </div>\n          <br />\n          <div>{initPersonDesc.personalD.value}</div>\n        </div>\n        <div className=\"view--personal--info\">\n          <div>{initPerson.personalLocation.value}</div>\n          <div>{initPerson.personalEmail.value}</div>\n          <div>{initPerson.personalLinkedIn.value}</div>\n          <div>{initPerson.personalPortfolio.value}</div>\n        </div>\n      </div>\n      <h2>WORK</h2>\n      <hr />\n      {Object.keys(workList).map((key) => (\n        <div className=\"view--work\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--work\">{workList[key].company.value}</span>\n              {\", \"}\n              <span className=\"view--work\">{workList[key].position.value}</span>\n            </div>\n            <div>\n              <span>{workList[key].start.value} </span>\n              {conditionalDate(workList[key])}\n              <span>{workList[key].end.value} </span>\n            </div>\n          </div>\n\n          {Object.keys(respList).map((subKey) =>\n            selectSubs(respList, key, subKey)\n          )}\n        </div>\n      ))}\n      <h2>EDUCATION</h2>\n      <hr />\n      {Object.keys(eduList).map((key) => (\n        <div className=\"view--work\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--work\">\n                {eduList[key].university.value}\n              </span>\n              {\", \"}\n              <span className=\"view--work\">{eduList[key].degree.value}</span>\n            </div>\n            <div>\n              <span>{eduList[key].start.value} </span>\n              {conditionalDate(eduList[key])}\n              <span>{eduList[key].end.value} </span>\n            </div>\n          </div>\n\n          {Object.keys(eduDescList).map((subKey) =>\n            selectSubs(eduDescList, key, subKey)\n          )}\n        </div>\n      ))}\n      <h2>ACHIEVEMENTS / EXTRACURRICULAR / OTHERS</h2>\n      <hr />\n      {Object.keys(otherList).map((key) => (\n        <div className=\"view--work\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--work\">\n                {otherList[key].university.value}\n              </span>\n              {\", \"}\n              <span className=\"view--work\">{otherList[key].degree.value}</span>\n            </div>\n            <div>\n              <span>{otherList[key].start.value} </span>\n              {conditionalDate(eduList[key])}\n              <span>{eduList[key].end.value} </span>\n            </div>\n          </div>\n\n          {Object.keys(eduDescList).map((subKey) =>\n            selectSubs(eduDescList, key, subKey)\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ViewDoc;\n"]},"metadata":{},"sourceType":"module"}