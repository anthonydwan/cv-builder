{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkResponsibilities(props) {\n  _s();\n\n  const {\n    jobNumber\n  } = props;\n  const Responsibility = {\n    placeholder: \"Reponsibility\",\n    value: \"\"\n  };\n  const initialWork = { ...workTemplate,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [jobNum, addjobNum] = useState(0);\n  const [workList, setWorkList] = useState({\n    [jobNum]: initialWork\n  });\n\n  const addWork = e => {\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobNum + 1]: workTemplate\n    }));\n    addjobNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(workList).map((key, index) => /*#__PURE__*/_jsxDEV(RenderTextInput, {\n      passedObj: workList[key],\n      handler: handleChange,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, \"WorkExp\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkResponsibilities, \"pLV67m0vjclnuHbCqtAWF90FJ78=\");\n\n_c = WorkResponsibilities;\nexport default WorkResponsibilities;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkResponsibilities\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js"],"names":["React","useState","WorkResponsibilities","props","jobNumber","Responsibility","placeholder","value","initialWork","workTemplate","company","position","start","end","jobNum","addjobNum","workList","setWorkList","addWork","e","prevWorkList","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","Object","keys","map","key","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM;AAACC,IAAAA;AAAD,MAAcD,KAApB;AACA,QAAME,cAAc,GAAG;AACnBC,IAAAA,WAAW,EAAE,eADM;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAAvB;AAKA,QAAMC,WAAW,GAAG,EAClB,GAAGC,YADe;AAElBC,IAAAA,OAAO,EAAE;AACPH,MAAAA,KAAK,EAAE;AADA,KAFS;AAKlBI,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,KAAK,EAAE;AADC,KALQ;AAQlBK,IAAAA,KAAK,EAAE;AACLL,MAAAA,KAAK,EAAE;AADF,KARW;AAWlBM,IAAAA,GAAG,EAAE;AACHN,MAAAA,KAAK,EAAE;AADJ;AAXa,GAApB;AAgBA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;AAAE,KAACa,MAAD,GAAUN;AAAZ,GAAD,CAAxC;;AAEA,QAAMU,OAAO,GAAIC,CAAD,IAAO;AACrBF,IAAAA,WAAW,CAAEG,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACN,MAAM,GAAG,CAAV,GAAcL;AAFe,KAAnB,CAAD,CAAX;AAIAM,IAAAA,SAAS,CAAEM,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAT;AACD,GAND;;AAQA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B,UAAM,CAACI,QAAD,EAAWC,QAAX,IAAuBL,CAAC,CAACM,MAAF,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAA7B;AACAV,IAAAA,WAAW,CAAEG,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACI,QAAD,GAAY,EACV,GAAGJ,YAAY,CAACI,QAAD,CADL;AAEV,SAACD,QAAD,GAAY,EACV,GAAGH,YAAY,CAACI,QAAD,CAAZ,CAAuBD,QAAvB,CADO;AAEVhB,UAAAA,KAAK,EAAEY,CAAC,CAACM,MAAF,CAASlB;AAFN;AAFF;AAFiB,KAAnB,CAAD,CAAX;AAUD,GAZD;;AAcA,sBACE;AAAA,eACGqB,MAAM,CAACC,IAAP,CAAYb,QAAZ,EAAsBc,GAAtB,CAA0B,CAACC,GAAD,EAAMC,KAAN,kBACzB,QAAC,eAAD;AACE,MAAA,SAAS,EAAEhB,QAAQ,CAACe,GAAD,CADrB;AAEE,MAAA,OAAO,EAAET,YAFX;AAGE,MAAA,KAAK,EAAEU;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEd,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAAS,SAAT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA9DQhB,oB;;KAAAA,oB;AAgET,eAAeA,oBAAf","sourcesContent":["import React, { useState} from \"react\";\n\n\nfunction WorkResponsibilities(props) {\n  const {jobNumber} = props\n  const Responsibility = {\n      placeholder: \"Reponsibility\",\n      value: \"\",\n  };\n\n  const initialWork = {\n    ...workTemplate,\n    company: {\n      value: \"Google\",\n    },\n    position: {\n      value: \"Software Engineer\",\n    },\n    start: {\n      value: \"2021-2\",\n    },\n    end: {\n      value: \"2022-2\",\n    },\n  };\n\n  const [jobNum, addjobNum] = useState(0);\n  const [workList, setWorkList] = useState({ [jobNum]: initialWork });\n\n  const addWork = (e) => {\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobNum + 1]: workTemplate,\n    }));\n    addjobNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const handleChange = (e) => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobIndex]: {\n        ...prevWorkList[jobIndex],\n        [inputBox]: {\n          ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  return (\n    <div key=\"WorkExp\">\n      {Object.keys(workList).map((key, index) => (\n        <RenderTextInput\n          passedObj={workList[key]}\n          handler={handleChange}\n          index={index}\n        />\n      ))}\n      <button type=\"button\" onClick={addWork}>\n        Add\n      </button>\n    </div>\n  );\n}\n\nexport default WorkResponsibilities\n"]},"metadata":{},"sourceType":"module"}