{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ResumeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PersonalDetails from \"./FormComponents/PersonalDetails\";\nimport RenderCard from \"./FormComponents/RenderCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResumeForm(props) {\n  _s();\n\n  const handleAddCard = (template, count, counter, setter) => {\n    setter(prevList => ({ ...prevList,\n      [count + 1]: template\n    }));\n    counter(prevNum => prevNum + 1);\n  };\n\n  const handleChangeCard = (e, setter) => {\n    const [inputBox, cardIndex] = e.target.name.split(\"_\");\n    setter(prevList => ({ ...prevList,\n      [cardIndex]: { ...prevList[cardIndex],\n        [inputBox]: { ...prevList[cardIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  const handleRemoveCard = (e, currList, setter) => {\n    const currWorkName = e.target.parentNode.getAttribute(\"data-name\");\n    const [_, cardIndex] = currWorkName.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, currList);\n    delete newObj[`${cardIndex}`];\n    setter(newObj);\n  };\n\n  const HandleAddDP = (cardNum, dpNum, dpSetter, dpCounter, dpTemplate) => {\n    dpSetter(prevDPList => ({ ...prevDPList,\n      [`${cardNum}_${dpNum + 1}`]: dpTemplate\n    }));\n    dpCounter(prevDPNum => prevDPNum + 1);\n  };\n\n  const HandleRemoveDP = (e, currDPList, dpSetter) => {\n    const currDP = e.target.previousElementSibling;\n    const [_, cardIndex, dpIndex] = currDP.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, currDPList);\n    delete newObj[`${cardIndex}_${dpIndex}`];\n    dpSetter(newObj);\n  };\n\n  const HandleChangeDP = (e, dpSetter) => {\n    const [_, cardIndex, dpIndex] = e.target.name.split(\"_\");\n    dpSetter(prevDPList => ({ ...prevDPList,\n      [`${cardIndex}_${dpIndex}`]: { ...prevDPList[`${cardIndex}_${dpIndex}`],\n        value: e.target.value\n      }\n    }));\n  };\n\n  const tempEdu = {\n    university: {\n      placeholder: \"University / Institution\",\n      value: \"\"\n    },\n    degree: {\n      placeholder: \"Degree\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initEdu = { ...tempEdu,\n    university: {\n      value: \"University of Sydney\"\n    },\n    degree: {\n      value: \"Bachelor of Computer Science\"\n    },\n    start: {\n      value: \"2019-3\"\n    },\n    end: {\n      value: \"2020-11\"\n    }\n  };\n  const tempOther = {\n    institution: {\n      placeholder: \"Institution\",\n      value: \"\"\n    },\n    detail: {\n      placeholder: \"Award / Activity / Others\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initOther = { ...tempOther,\n    institution: {\n      value: \"University of Sydney\"\n    },\n    degree: {\n      value: \"Dean's List for School of Computer Science 2019\"\n    },\n    start: {\n      value: \"2019-3\"\n    },\n    end: {\n      value: \"2019-11\"\n    }\n  };\n  const tempWork = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\"\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initWork = { ...tempWork,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [workNum, addWorkNum] = useState(0);\n  const [workList, setWorkList] = useState({\n    [workNum]: initWork\n  });\n  const [eduNum, addEduNum] = useState(0);\n  const [eduList, setEduList] = useState({\n    [eduNum]: initEdu\n  });\n  const [otherNum, addOtherNum] = useState(0);\n  const [otherList, setOtherList] = useState({\n    [otherNum]: initOther\n  });\n\n  const addWork = () => handleAddCard(tempWork, workNum, addWorkNum, setWorkList);\n\n  const changeWork = e => handleChangeCard(e, setWorkList);\n\n  const removeWork = e => handleRemoveCard(e, workList, setWorkList);\n\n  const addEdu = () => handleAddCard(tempEdu, eduNum, addEduNum, setEduList);\n\n  const changeEdu = e => handleChangeCard(e, setEduList);\n\n  const removeEdu = e => handleRemoveCard(e, eduList, setEduList);\n\n  const tempResp = {\n    placeholder: \"Reponsibility\"\n  };\n  const tempDesc = {\n    placeholder: \"Description\"\n  };\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${workNum}_${respNum}`]: tempResp\n  });\n  const [eduDescNum, addEduDescNum] = useState(0);\n  const [eduDescList, setEduDescList] = useState({\n    [`${eduNum}_${eduDescNum}`]: tempDesc\n  });\n\n  const addResp = () => HandleAddDP(workNum, respNum, setRespList, addRespNum, tempResp);\n\n  const removeResp = e => HandleRemoveDP(e, respList, setRespList);\n\n  const changeResp = e => HandleChangeDP(e, setRespList);\n\n  const addEduDesc = () => HandleAddDP(eduNum, eduDescNum, setEduDescList, addEduDescNum, tempDesc);\n\n  const removeEduDesc = e => HandleRemoveDP(e, eduDescList, setEduDescList);\n\n  const changeEduDesc = e => HandleChangeDP(e, setEduDescList);\n\n  const workObj = {\n    sectionName: \"Work\",\n    cardList: workList,\n    changeCard: changeWork,\n    addCard: addWork,\n    removeCard: removeWork\n  };\n  const respObj = {\n    subsecName: \"Responsibility\",\n    dpList: respList,\n    changeDP: changeResp,\n    addDP: addResp,\n    removeDP: removeResp\n  };\n  const eduObj = {\n    sectionName: \"Education\",\n    cardList: eduList,\n    changeCard: changeEdu,\n    addCard: addEdu,\n    removeCard: removeEdu\n  };\n  const eduDescObj = {\n    subsecName: \"Description\",\n    dpList: eduDescList,\n    changeDP: changeEduDesc,\n    addDP: addEduDesc,\n    removeDP: removeEduDesc\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"formDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Personal Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PersonalDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Work Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderCard, {\n          card: workObj,\n          dp: respObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderCard, {\n          card: eduObj,\n          dp: eduDescObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Others\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenderCard, {\n          card: workObj,\n          dp: respObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResumeForm, \"9WjPhb6nLPRokFM2IiuiwsydILk=\");\n\n_c = ResumeForm;\nexport default ResumeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResumeForm\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ResumeForm.js"],"names":["React","useState","PersonalDetails","RenderCard","ResumeForm","props","handleAddCard","template","count","counter","setter","prevList","prevNum","handleChangeCard","e","inputBox","cardIndex","target","name","split","value","handleRemoveCard","currList","currWorkName","parentNode","getAttribute","_","newObj","Object","assign","HandleAddDP","cardNum","dpNum","dpSetter","dpCounter","dpTemplate","prevDPList","prevDPNum","HandleRemoveDP","currDPList","currDP","previousElementSibling","dpIndex","HandleChangeDP","tempEdu","university","placeholder","degree","start","end","initEdu","tempOther","institution","detail","initOther","tempWork","company","position","initWork","workNum","addWorkNum","workList","setWorkList","eduNum","addEduNum","eduList","setEduList","otherNum","addOtherNum","otherList","setOtherList","addWork","changeWork","removeWork","addEdu","changeEdu","removeEdu","tempResp","tempDesc","respNum","addRespNum","respList","setRespList","eduDescNum","addEduDescNum","eduDescList","setEduDescList","addResp","removeResp","changeResp","addEduDesc","removeEduDesc","changeEduDesc","workObj","sectionName","cardList","changeCard","addCard","removeCard","respObj","subsecName","dpList","changeDP","addDP","removeDP","eduObj","eduDescObj"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PersonalDetails from \"./FormComponents/PersonalDetails\";\nimport RenderCard from \"./FormComponents/RenderCard\";\n\nfunction ResumeForm(props) {\n  const handleAddCard = (template, count, counter, setter) => {\n    setter((prevList) => ({\n      ...prevList,\n      [count + 1]: template,\n    }));\n    counter((prevNum) => prevNum + 1);\n  };\n\n  const handleChangeCard = (e, setter) => {\n    const [inputBox, cardIndex] = e.target.name.split(\"_\");\n    setter((prevList) => ({\n      ...prevList,\n      [cardIndex]: {\n        ...prevList[cardIndex],\n        [inputBox]: {\n          ...prevList[cardIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  const handleRemoveCard = (e, currList, setter) => {\n    const currWorkName = e.target.parentNode.getAttribute(\"data-name\");\n    const [_, cardIndex] = currWorkName.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, currList);\n    delete newObj[`${cardIndex}`];\n    setter(newObj);\n  };\n\n  const HandleAddDP = (cardNum, dpNum, dpSetter, dpCounter, dpTemplate) => {\n    dpSetter((prevDPList) => ({\n      ...prevDPList,\n      [`${cardNum}_${dpNum + 1}`]: dpTemplate,\n    }));\n    dpCounter((prevDPNum) => prevDPNum + 1);\n  };\n\n  const HandleRemoveDP = (e, currDPList, dpSetter) => {\n    const currDP = e.target.previousElementSibling;\n    const [_, cardIndex, dpIndex] = currDP.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, currDPList);\n    delete newObj[`${cardIndex}_${dpIndex}`];\n    dpSetter(newObj);\n  };\n\n  const HandleChangeDP = (e, dpSetter) => {\n    const [_, cardIndex, dpIndex] = e.target.name.split(\"_\");\n    dpSetter((prevDPList) => ({\n      ...prevDPList,\n      [`${cardIndex}_${dpIndex}`]: {\n        ...prevDPList[`${cardIndex}_${dpIndex}`],\n        value: e.target.value,\n      },\n    }));\n  };\n\n  const tempEdu = {\n    university: {\n      placeholder: \"University / Institution\",\n      value: \"\",\n    },\n    degree: {\n      placeholder: \"Degree\",\n      value: \"\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\",\n    },\n  };\n\n  const initEdu = {\n    ...tempEdu,\n    university: {\n      value: \"University of Sydney\",\n    },\n    degree: {\n      value: \"Bachelor of Computer Science\",\n    },\n    start: {\n      value: \"2019-3\",\n    },\n    end: {\n      value: \"2020-11\",\n    },\n  };\n\n  const tempOther = {\n    institution: {\n      placeholder: \"Institution\",\n      value: \"\",\n    },\n    detail: {\n      placeholder: \"Award / Activity / Others\",\n      value: \"\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\",\n    },\n  };\n\n  const initOther = {\n    ...tempOther,\n    institution: {\n      value: \"University of Sydney\",\n    },\n    degree: {\n      value: \"Dean's List for School of Computer Science 2019\",\n    },\n    start: {\n      value: \"2019-3\",\n    },\n    end: {\n      value: \"2019-11\",\n    },\n  };\n\n  const tempWork = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\",\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\",\n    },\n  };\n\n  const initWork = {\n    ...tempWork,\n    company: {\n      value: \"Google\",\n    },\n    position: {\n      value: \"Software Engineer\",\n    },\n    start: {\n      value: \"2021-2\",\n    },\n    end: {\n      value: \"2022-2\",\n    },\n  };\n\n  const [workNum, addWorkNum] = useState(0);\n  const [workList, setWorkList] = useState({ [workNum]: initWork });\n\n  const [eduNum, addEduNum] = useState(0);\n  const [eduList, setEduList] = useState({ [eduNum]: initEdu });\n\n  const [otherNum, addOtherNum] = useState(0);\n  const [otherList, setOtherList] = useState({ [otherNum]: initOther });\n\n  const addWork = () =>\n    handleAddCard(tempWork, workNum, addWorkNum, setWorkList);\n  const changeWork = (e) => handleChangeCard(e, setWorkList);\n  const removeWork = (e) => handleRemoveCard(e, workList, setWorkList);\n\n  const addEdu = () => handleAddCard(tempEdu, eduNum, addEduNum, setEduList);\n  const changeEdu = (e) => handleChangeCard(e, setEduList);\n  const removeEdu = (e) => handleRemoveCard(e, eduList, setEduList);\n\n  const tempResp = { placeholder: \"Reponsibility\" };\n  const tempDesc = { placeholder: \"Description\" };\n\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${workNum}_${respNum}`]: tempResp,\n  });\n\n  const [eduDescNum, addEduDescNum] = useState(0);\n  const [eduDescList, setEduDescList] = useState({\n    [`${eduNum}_${eduDescNum}`]: tempDesc,\n  });\n\n  const addResp = () =>\n    HandleAddDP(workNum, respNum, setRespList, addRespNum, tempResp);\n  const removeResp = (e) => HandleRemoveDP(e, respList, setRespList);\n  const changeResp = (e) => HandleChangeDP(e, setRespList);\n\n  const addEduDesc = () =>\n    HandleAddDP(eduNum, eduDescNum, setEduDescList, addEduDescNum, tempDesc);\n  const removeEduDesc = (e) => HandleRemoveDP(e, eduDescList, setEduDescList);\n  const changeEduDesc = (e) => HandleChangeDP(e, setEduDescList);\n\n  const workObj = {\n    sectionName: \"Work\",\n    cardList: workList,\n    changeCard: changeWork,\n    addCard: addWork,\n    removeCard: removeWork,\n  };\n  const respObj = {\n    subsecName: \"Responsibility\",\n    dpList: respList,\n    changeDP: changeResp,\n    addDP: addResp,\n    removeDP: removeResp,\n  };\n\n  const eduObj = {\n    sectionName: \"Education\",\n    cardList: eduList,\n    changeCard: changeEdu,\n    addCard: addEdu,\n    removeCard: removeEdu,\n  };\n  const eduDescObj = {\n    subsecName: \"Description\",\n    dpList: eduDescList,\n    changeDP: changeEduDesc,\n    addDP: addEduDesc,\n    removeDP: removeEduDesc,\n  };\n\n  return (\n    <div id=\"formDiv\">\n      <form>\n        <div>\n          <h2>Personal Details</h2>\n          <PersonalDetails />\n        </div>\n        <div>\n          <h2>Work Experience</h2>\n          <RenderCard card={workObj} dp={respObj} />\n        </div>\n        <div>\n          <h2>Education</h2>\n          <RenderCard card={eduObj} dp={eduDescObj} />\n        </div>\n        <div>\n          <h2>Others</h2>\n          <RenderCard card={workObj} dp={respObj} />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ResumeForm;\n"]},"metadata":{},"sourceType":"module"}