{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkResponsibilities(props) {\n  _s();\n\n  const {\n    jobNumber\n  } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\"\n  };\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${jobNumber}_${respNum}`]: Resp\n  });\n\n  const addResp = () => {\n    setRespList(prevRespList => ({ ...prevRespList,\n      [`${jobNumber}_${respNum + 1}`]: Resp\n    }));\n    addRespNum(prevJobNum => prevJobNum + 1);\n  };\n\n  console.log(respList);\n\n  const removeResp = e => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    const newObj = Object.assign(respList);\n    delete newObj[`${jobIndex}_${respIndex}`];\n    setRespList(newObj);\n  };\n\n  const handleChange = e => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    setRespList(prevRespList => ({ ...prevRespList,\n      [`${jobIndex}_${respIndex}`]: { ...prevRespList[`${jobIndex}_${respIndex}`],\n        value: e.target.value\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [Object.keys(respList).map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: respList[key].placeholder,\n        value: respList[key].value,\n        onChange: handleChange,\n        name: `Resp_${jobNumber}_${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: removeResp,\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addResp,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkResponsibilities, \"D+2RLj36qPDpbIqkSmJKbFxsDts=\");\n\n_c = WorkResponsibilities;\nexport default WorkResponsibilities;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkResponsibilities\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js"],"names":["React","useState","WorkResponsibilities","props","jobNumber","Resp","placeholder","value","respNum","addRespNum","respList","setRespList","addResp","prevRespList","prevJobNum","console","log","removeResp","e","_","jobIndex","respIndex","target","name","split","newObj","Object","assign","handleChange","keys","map","key","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAME,IAAI,GAAG;AACXC,IAAAA,WAAW,EAAE,eADF;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAb;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvC,KAAE,GAAEG,SAAU,IAAGI,OAAQ,EAAzB,GAA6BH;AADU,GAAD,CAAxC;;AAIA,QAAMO,OAAO,GAAG,MAAM;AACpBD,IAAAA,WAAW,CAAEE,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAAE,GAAET,SAAU,IAAGI,OAAO,GAAG,CAAE,EAA7B,GAAiCH;AAFJ,KAAnB,CAAD,CAAX;AAIAI,IAAAA,UAAU,CAAEK,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAV;AACD,GAND;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxB,UAAM,CAACC,CAAD,EAAIC,QAAJ,EAAcC,SAAd,IAA2BH,CAAC,CAACI,MAAF,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAAjC;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcjB,QAAd,CAAf;AACA,WAAOe,MAAM,CAAE,GAAEL,QAAS,IAAGC,SAAU,EAA1B,CAAb;AACAV,IAAAA,WAAW,CAACc,MAAD,CAAX;AACD,GALD;;AAOA,QAAMG,YAAY,GAAIV,CAAD,IAAO;AAC1B,UAAM,CAACC,CAAD,EAAIC,QAAJ,EAAcC,SAAd,IAA2BH,CAAC,CAACI,MAAF,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAAjC;AACAb,IAAAA,WAAW,CAAEE,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAAE,GAAEO,QAAS,IAAGC,SAAU,EAA1B,GAA8B,EAC5B,GAAGR,YAAY,CAAE,GAAEO,QAAS,IAAGC,SAAU,EAA1B,CADa;AAE5Bd,QAAAA,KAAK,EAAEW,CAAC,CAACI,MAAF,CAASf;AAFY;AAFD,KAAnB,CAAD,CAAX;AAOD,GATD;;AAWA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGmB,MAAM,CAACG,IAAP,CAAYnB,QAAZ,EAAsBoB,GAAtB,CAA0B,CAACC,GAAD,EAAMC,KAAN,kBACzB;AAAA,8BACE;AACE,QAAA,WAAW,EAAEtB,QAAQ,CAACqB,GAAD,CAAR,CAAczB,WAD7B;AAEE,QAAA,KAAK,EAAEI,QAAQ,CAACqB,GAAD,CAAR,CAAcxB,KAFvB;AAGE,QAAA,QAAQ,EAAEqB,YAHZ;AAIE,QAAA,IAAI,EAAG,QAAOxB,SAAU,IAAG4B,KAAM;AAJnC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEf,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAcE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEL,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA5DQV,oB;;KAAAA,oB;AA8DT,eAAeA,oBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction WorkResponsibilities(props) {\n  const { jobNumber } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\",\n  };\n\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${jobNumber}_${respNum}`]: Resp,\n  });\n\n  const addResp = () => {\n    setRespList((prevRespList) => ({\n      ...prevRespList,\n      [`${jobNumber}_${respNum + 1}`]: Resp,\n    }));\n    addRespNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  console.log(respList);\n\n  const removeResp = (e) => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    const newObj = Object.assign(respList);\n    delete newObj[`${jobIndex}_${respIndex}`]\n    setRespList(newObj);\n  };\n\n  const handleChange = (e) => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    setRespList((prevRespList) => ({\n      ...prevRespList,\n      [`${jobIndex}_${respIndex}`]: {\n        ...prevRespList[`${jobIndex}_${respIndex}`],\n        value: e.target.value,\n      },\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(respList).map((key, index) => (\n        <div>\n          <input\n            placeholder={respList[key].placeholder}\n            value={respList[key].value}\n            onChange={handleChange}\n            name={`Resp_${jobNumber}_${index}`}\n          />\n          <button type=\"button\" onClick={removeResp}>\n            remove\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={addResp}>\n        Add\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default WorkResponsibilities;\n"]},"metadata":{},"sourceType":"module"}