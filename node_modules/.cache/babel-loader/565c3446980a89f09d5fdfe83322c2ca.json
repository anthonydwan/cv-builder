{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkExp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport WorkResponsibilities from \"./WorkResponsibilities\";\nimport RenderTextInput from \"./RenderTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkExp() {\n  _s();\n\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\"\n    },\n    position: {\n      placeholder: \"Position\"\n    },\n    start: {\n      placeholder: \"Start Date\"\n    },\n    end: {\n      placeholder: \"End Date\"\n    }\n  };\n  const initialWork = { ...workTemplate,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [workList, setWorkList] = useState([initialWork, initialWork]);\n\n  const handleWork = e => {\n    setWorkList(prevWork => {\n      return { ...prevWork,\n        [e.target.id]: { ...prevWork[e.target.id],\n          value: e.target.value\n        }\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: workList.map(work => /*#__PURE__*/_jsxDEV(RenderTextInput, {\n      passedObj: work,\n      handler: handleWork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkExp, \"k+9BdwvwCIfP9mSnHL+RRLaDPwY=\");\n\n_c = WorkExp;\nexport default WorkExp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExp\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkExp.js"],"names":["React","useState","uniqid","WorkResponsibilities","RenderTextInput","WorkExp","workTemplate","company","placeholder","position","start","end","initialWork","value","workList","setWorkList","handleWork","e","prevWork","target","id","map","work"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN,KADU;AAInBC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,WAAW,EAAE;AADL,KAJS;AAOnBE,IAAAA,KAAK,EAAE;AACLF,MAAAA,WAAW,EAAE;AADR,KAPY;AAUnBG,IAAAA,GAAG,EAAE;AACHH,MAAAA,WAAW,EAAE;AADV;AAVc,GAArB;AAeA,QAAMI,WAAW,GAAG,EAClB,GAAGN,YADe;AAElBC,IAAAA,OAAO,EAAE;AACPM,MAAAA,KAAK,EAAE;AADA,KAFS;AAKlBJ,IAAAA,QAAQ,EAAE;AACRI,MAAAA,KAAK,EAAE;AADC,KALQ;AAQlBH,IAAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAE;AADF,KARW;AAWlBF,IAAAA,GAAG,EAAE;AACHE,MAAAA,KAAK,EAAE;AADJ;AAXa,GAApB;AAgBA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAACW,WAAD,EAAcA,WAAd,CAAD,CAAxC;;AAEA,QAAMI,UAAU,GAAIC,CAAD,IAAO;AACxBF,IAAAA,WAAW,CAAEG,QAAD,IAAc;AACxB,aAAO,EACL,GAAGA,QADE;AAEL,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAe,EACb,GAAGF,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CADE;AAEbP,UAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASN;AAFH;AAFV,OAAP;AAOD,KARU,CAAX;AASD,GAVD;;AAYA,sBACE;AAAA,cACGC,QAAQ,CAACO,GAAT,CAAcC,IAAD,iBACZ,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEA,IAA5B;AAAkC,MAAA,OAAO,EAAEN;AAA3C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArDQX,O;;KAAAA,O;AAuDT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport WorkResponsibilities from \"./WorkResponsibilities\";\nimport RenderTextInput from \"./RenderTextInput\";\n\nfunction WorkExp() {\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\",\n    },\n    position: {\n      placeholder: \"Position\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n    },\n    end: {\n      placeholder: \"End Date\",\n    },\n  };\n\n  const initialWork = {\n    ...workTemplate,\n    company: {\n      value: \"Google\",\n    },\n    position: {\n      value: \"Software Engineer\",\n    },\n    start: {\n      value: \"2021-2\",\n    },\n    end: {\n      value: \"2022-2\",\n    },\n  };\n\n  const [workList, setWorkList] = useState([initialWork, initialWork]);\n\n  const handleWork = (e) => {\n    setWorkList((prevWork) => {\n      return {\n        ...prevWork,\n        [e.target.id]: {\n          ...prevWork[e.target.id],\n          value: e.target.value,\n        },\n      };\n    });\n  };\n\n  return (\n    <div>\n      {workList.map((work) => (\n        <RenderTextInput passedObj={work} handler={handleWork} />\n      ))}\n    </div>\n  );\n}\n\nexport default WorkExp;\n"]},"metadata":{},"sourceType":"module"}