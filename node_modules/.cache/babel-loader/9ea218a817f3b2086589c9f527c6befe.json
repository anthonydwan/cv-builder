{"ast":null,"code":"import React, { useState } from \"react\"; // function WorkResponsibilities(props) {\n//   const { jobNumber } = props;\n//   const Responsibility = {\n//     placeholder: \"Reponsibility\",\n//     value: \"\",\n//   };\n//   const initialWork = {};\n//   const [jobNum, addjobNum] = useState(0);\n//   const [workList, setWorkList] = useState({ [jobNum]: initialWork });\n//   const addWork = (e) => {\n//     setWorkList((prevWorkList) => ({\n//       ...prevWorkList,\n//       [jobNum + 1]: workTemplate,\n//     }));\n//     addjobNum((prevJobNum) => prevJobNum + 1);\n//   };\n//   const handleChange = (e) => {\n//     const [inputBox, jobIndex] = e.target.name.split(\"_\");\n//     setWorkList((prevWorkList) => ({\n//       ...prevWorkList,\n//       [jobIndex]: {\n//         ...prevWorkList[jobIndex],\n//         [inputBox]: {\n//           ...prevWorkList[jobIndex][inputBox],\n//           value: e.target.value,\n//         },\n//       },\n//     }));\n//   };\n//   return (\n//     <div key=\"WorkExp\">\n//       {Object.keys(workList).map((key, index) => (\n//         <RenderTextInput\n//           passedObj={workList[key]}\n//           handler={handleChange}\n//           index={index}\n//         />\n//       ))}\n//       <button type=\"button\" onClick={addWork}>\n//         Add\n//       </button>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js"],"names":["React","useState"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\n\n// function WorkResponsibilities(props) {\n//   const { jobNumber } = props;\n//   const Responsibility = {\n//     placeholder: \"Reponsibility\",\n//     value: \"\",\n//   };\n\n//   const initialWork = {};\n\n//   const [jobNum, addjobNum] = useState(0);\n//   const [workList, setWorkList] = useState({ [jobNum]: initialWork });\n\n//   const addWork = (e) => {\n//     setWorkList((prevWorkList) => ({\n//       ...prevWorkList,\n//       [jobNum + 1]: workTemplate,\n//     }));\n//     addjobNum((prevJobNum) => prevJobNum + 1);\n//   };\n\n//   const handleChange = (e) => {\n//     const [inputBox, jobIndex] = e.target.name.split(\"_\");\n//     setWorkList((prevWorkList) => ({\n//       ...prevWorkList,\n//       [jobIndex]: {\n//         ...prevWorkList[jobIndex],\n//         [inputBox]: {\n//           ...prevWorkList[jobIndex][inputBox],\n//           value: e.target.value,\n//         },\n//       },\n//     }));\n//   };\n\n//   return (\n//     <div key=\"WorkExp\">\n//       {Object.keys(workList).map((key, index) => (\n//         <RenderTextInput\n//           passedObj={workList[key]}\n//           handler={handleChange}\n//           index={index}\n//         />\n//       ))}\n//       <button type=\"button\" onClick={addWork}>\n//         Add\n//       </button>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}