{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Subsections.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DotPoint(props) {\n  const {\n    cardIndex,\n    subsection,\n    dotptList,\n    addHandler,\n    removeHandler,\n    changeHandler\n  } = props;\n\n  const selectSubsection = (cardIndex, key) => {\n    const {\n      leadingCardNum,\n      subsectionNum\n    } = key.splut(\"_\"); // str == int\n\n    if (cardIndex === parseInt(leadingCardNum)) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [console.log(cardIndex), Object.keys(dotptList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: dotptList[key].placeholder,\n        value: dotptList[key].value,\n        onChange: changeHandler,\n        name: `${subsection}_${key}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: removeHandler,\n        children: [\"Remove \", subsection]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, `${subsection}_${key}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addHandler,\n      children: [\"Add \", subsection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DotPoint;\nexport default DotPoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"DotPoint\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Subsections.js"],"names":["React","DotPoint","props","cardIndex","subsection","dotptList","addHandler","removeHandler","changeHandler","selectSubsection","key","leadingCardNum","subsectionNum","splut","parseInt","console","log","Object","keys","map","placeholder","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;;AASA,QAAMO,gBAAgB,GAAG,CAACN,SAAD,EAAYO,GAAZ,KAAoB;AAC3C,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAoCF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAA1C,CAD2C,CAE3C;;AACA,QAAIV,SAAS,KAAKW,QAAQ,CAACH,cAAD,CAA1B,EAA4C;AAC1C;AACD;AACF,GAND;;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGI,OAAO,CAACC,GAAR,CAAYb,SAAZ,CADH,EAEGc,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,GAAvB,CAA4BT,GAAD,iBAC1B;AAAA,8BACE;AACE,QAAA,WAAW,EAAEL,SAAS,CAACK,GAAD,CAAT,CAAeU,WAD9B;AAEE,QAAA,KAAK,EAAEf,SAAS,CAACK,GAAD,CAAT,CAAeW,KAFxB;AAGE,QAAA,QAAQ,EAAEb,aAHZ;AAIE,QAAA,IAAI,EAAG,GAAEJ,UAAW,IAAGM,GAAI;AAJ7B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEH,aAA/B;AAAA,8BACUH,UADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAAW,GAAEA,UAAW,IAAGM,GAAI,EAA/B;AAAA;AAAA;AAAA;AAAA,YADD,CAFH,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEJ,UAA/B;AAAA,yBACOF,UADP;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KAvCQH,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nfunction DotPoint(props) {\n  const {\n    cardIndex,\n    subsection,\n    dotptList,\n    addHandler,\n    removeHandler,\n    changeHandler,\n  } = props;\n\n  const selectSubsection = (cardIndex, key) => {\n    const { leadingCardNum, subsectionNum } = key.splut(\"_\")\n    // str == int\n    if (cardIndex === parseInt(leadingCardNum)) {\n      return \n    }\n  }\n\n  return (\n    <React.Fragment>\n      {console.log(cardIndex)}\n      {Object.keys(dotptList).map((key) => (\n        <div key={`${subsection}_${key}`}>\n          <textarea\n            placeholder={dotptList[key].placeholder}\n            value={dotptList[key].value}\n            onChange={changeHandler}\n            name={`${subsection}_${key}`}\n          />\n          <button type=\"button\" onClick={removeHandler}>\n            Remove {subsection}\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={addHandler}>\n        Add {subsection}\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default DotPoint;\n"]},"metadata":{},"sourceType":"module"}