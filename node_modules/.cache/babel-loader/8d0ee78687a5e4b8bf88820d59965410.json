{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewRender.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewRender(props) {\n  const {\n    title,\n    sectionList,\n    subsectionList,\n    int,\n    detail\n  } = props;\n\n  const conditionalDate = key => {\n    const start = key.start.value;\n    const end = key.end.value;\n\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (subsectionList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const currSectionSubKeys = Object.keys(subsectionList).filter(sub => sub.split(\"_\")[0] === key);\n    const DPcount = currSectionSubKeys.length;\n\n    if (DPcount === 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"view--subsection\",\n        children: subsectionList[subKey].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    } else if (currSectionSubKeys.map(subkey => subsectionList[subkey].value === undefined || subsectionList[subkey].value === \"\").every(e => e === true)) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"view--subsection\",\n          children: subsectionList[subKey].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const conditionalSection = key => {\n    if (sectionList[key][int].value !== undefined && sectionList[key][int].value !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view--titleBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"view--section\",\n              children: sectionList[key][int].value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"view--section\",\n              children: sectionList[key][detail].value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [sectionList[key].start.value, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), conditionalDate(sectionList[key]), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [sectionList[key].end.value, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), Object.keys(subsectionList).map(subKey => selectSubs(subsectionList, key, subKey))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: Object.keys(sectionList).map(key => conditionalSection(key))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ViewRender;\nexport default ViewRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewRender\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewRender.js"],"names":["React","ViewRender","props","title","sectionList","subsectionList","int","detail","conditionalDate","key","start","value","end","selectSubs","list","subKey","primary","split","renderDP","currSectionSubKeys","Object","keys","filter","sub","DPcount","length","map","subkey","undefined","every","e","conditionalSection"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction ViewRender(props) {\n  const { title, sectionList, subsectionList, int, detail } = props;\n\n  const conditionalDate = (key) => {\n    const start = key.start.value;\n    const end = key.end.value;\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (subsectionList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const currSectionSubKeys = Object.keys(subsectionList).filter(\n      (sub) => sub.split(\"_\")[0] === key\n    );\n    const DPcount = currSectionSubKeys.length;\n    if (DPcount === 1) {\n      return <p className=\"view--subsection\">{subsectionList[subKey].value}</p>;\n    } else if (\n      currSectionSubKeys\n        .map(\n          (subkey) =>\n            subsectionList[subkey].value === undefined ||\n            subsectionList[subkey].value === \"\"\n        )\n        .every((e) => e === true)\n    ) {\n      return null;\n    } else {\n      return (\n        <ul>\n          <li className=\"view--subsection\">{subsectionList[subKey].value}</li>\n        </ul>\n      );\n    }\n  };\n\n  const conditionalSection = (key) => {\n    if (\n      sectionList[key][int].value !== undefined &&\n      sectionList[key][int].value !== \"\"\n    ) {\n      return (\n        \n        <div className=\"view--section\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--section\">\n                {sectionList[key][int].value}\n              </span>\n              {\", \"}\n              <span className=\"view--section\">\n                {sectionList[key][detail].value}\n              </span>\n            </div>\n            <div>\n              <span>{sectionList[key].start.value} </span>\n              {conditionalDate(sectionList[key])}\n              <span>{sectionList[key].end.value} </span>\n            </div>\n          </div>\n          {Object.keys(subsectionList).map((subKey) =>\n            selectSubs(subsectionList, key, subKey)\n          )}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(sectionList).map((key) =>\n        conditionalSection(key)\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ViewRender;\n"]},"metadata":{},"sourceType":"module"}