{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkResponsibilities(props) {\n  _s();\n\n  const {\n    jobNumber\n  } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\"\n  };\n  const initialResp = { ...Resp,\n    value: \"Involved in the implementation of the new feature on Chrome.\"\n  };\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [respNum]: initialResp\n  });\n\n  const addWork = e => {\n    setRespList(prevWorkList => ({ ...prevWorkList,\n      [jobNum + 1]: workTemplate\n    }));\n    addjobNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(workList).map((key, index) => /*#__PURE__*/_jsxDEV(RenderTextInput, {\n      passedObj: workList[key],\n      handler: handleChange,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, \"WorkExp\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkResponsibilities, \"H1DJH22edJcWHz5ZlLembzjhIB4=\");\n\n_c = WorkResponsibilities;\nexport default WorkResponsibilities;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkResponsibilities\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js"],"names":["React","useState","WorkResponsibilities","props","jobNumber","Resp","placeholder","value","initialResp","respNum","addRespNum","respList","setRespList","addWork","e","prevWorkList","jobNum","workTemplate","addjobNum","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","setWorkList","Object","keys","workList","map","key","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAIA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAME,IAAI,GAAG;AACXC,IAAAA,WAAW,EAAE,eADF;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAb;AAKA,QAAMC,WAAW,GAAG,EAAC,GAAGH,IAAJ;AAAUE,IAAAA,KAAK,EAAE;AAAjB,GAApB;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AAAE,KAACQ,OAAD,GAAWD;AAAb,GAAD,CAAxC;;AAEA,QAAMK,OAAO,GAAIC,CAAD,IAAO;AACrBF,IAAAA,WAAW,CAAEG,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACC,MAAM,GAAG,CAAV,GAAcC;AAFe,KAAnB,CAAD,CAAX;AAIAC,IAAAA,SAAS,CAAEC,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAT;AACD,GAND;;AAQA,QAAMC,YAAY,GAAIN,CAAD,IAAO;AAC1B,UAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBR,CAAC,CAACS,MAAF,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAA7B;AACAC,IAAAA,WAAW,CAAEX,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACO,QAAD,GAAY,EACV,GAAGP,YAAY,CAACO,QAAD,CADL;AAEV,SAACD,QAAD,GAAY,EACV,GAAGN,YAAY,CAACO,QAAD,CAAZ,CAAuBD,QAAvB,CADO;AAEVd,UAAAA,KAAK,EAAEO,CAAC,CAACS,MAAF,CAAShB;AAFN;AAFF;AAFiB,KAAnB,CAAD,CAAX;AAUD,GAZD;;AAcA,sBACE;AAAA,eACGoB,MAAM,CAACC,IAAP,CAAYC,QAAZ,EAAsBC,GAAtB,CAA0B,CAACC,GAAD,EAAMC,KAAN,kBACzB,QAAC,eAAD;AACE,MAAA,SAAS,EAAEH,QAAQ,CAACE,GAAD,CADrB;AAEE,MAAA,OAAO,EAAEX,YAFX;AAGE,MAAA,KAAK,EAAEY;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEnB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAAS,SAAT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhDQX,oB;;KAAAA,oB;AAkDT,eAAeA,oBAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\n\nfunction WorkResponsibilities(props) {\n  const { jobNumber } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\",\n  };\n\n  const initialResp = {...Resp, value: \"Involved in the implementation of the new feature on Chrome.\"};\n\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({ [respNum]: initialResp });\n\n  const addWork = (e) => {\n    setRespList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobNum + 1]: workTemplate,\n    }));\n    addjobNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const handleChange = (e) => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobIndex]: {\n        ...prevWorkList[jobIndex],\n        [inputBox]: {\n          ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  return (\n    <div key=\"WorkExp\">\n      {Object.keys(workList).map((key, index) => (\n        <RenderTextInput\n          passedObj={workList[key]}\n          handler={handleChange}\n          index={index}\n        />\n      ))}\n      <button type=\"button\" onClick={addWork}>\n        Add\n      </button>\n    </div>\n  );\n}\n\nexport default WorkResponsibilities"]},"metadata":{},"sourceType":"module"}