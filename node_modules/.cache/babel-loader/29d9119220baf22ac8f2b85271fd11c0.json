{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Work.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WorkResp from \"./WorkResp\";\nimport RenderTextInput from \"./RenderTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkExp() {\n  _s();\n\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\"\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initialWork = { ...workTemplate,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [jobNum, addjobNum] = useState(0);\n  const [workList, setWorkList] = useState({\n    [jobNum]: initialWork\n  });\n\n  const addWork = e => {\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobNum + 1]: workTemplate\n    }));\n    addjobNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  const removeWork = e => {\n    const currWork = e.target;\n    console.log(e.target.parentNode.name);\n    const [_, jobIndex] = currWork.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, workList);\n    delete newObj[`${jobIndex}`];\n    setWorkList(newObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [Object.keys(workList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workExp--block\",\n      name: `work_${key}`,\n      children: [/*#__PURE__*/_jsxDEV(RenderTextInput, {\n        passedObj: workList[key],\n        handler: handleChange,\n        index: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WorkResp, {\n        jobNumber: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: removeWork,\n        children: \"Remove Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkExp, \"pLV67m0vjclnuHbCqtAWF90FJ78=\");\n\n_c = WorkExp;\nexport default WorkExp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExp\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Work.js"],"names":["React","useState","WorkResp","RenderTextInput","WorkExp","workTemplate","company","placeholder","value","position","start","end","initialWork","jobNum","addjobNum","workList","setWorkList","addWork","e","prevWorkList","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","removeWork","currWork","console","log","parentNode","_","newObj","Object","assign","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport WorkResp from \"./WorkResp\";\nimport RenderTextInput from \"./RenderTextInput\";\n\nfunction WorkExp() {\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\",\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\",\n    },\n  };\n\n  const initialWork = {\n    ...workTemplate,\n    company: {\n      value: \"Google\",\n    },\n    position: {\n      value: \"Software Engineer\",\n    },\n    start: {\n      value: \"2021-2\",\n    },\n    end: {\n      value: \"2022-2\",\n    },\n  };\n\n  const [jobNum, addjobNum] = useState(0);\n  const [workList, setWorkList] = useState({ [jobNum]: initialWork });\n\n  const addWork = (e) => {\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobNum + 1]: workTemplate,\n    }));\n    addjobNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const handleChange = (e) => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobIndex]: {\n        ...prevWorkList[jobIndex],\n        [inputBox]: {\n          ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  const removeWork = (e) => {\n    const currWork = e.target;\n    console.log(e.target.parentNode.name);\n    const [_, jobIndex] = currWork.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, workList);\n    delete newObj[`${jobIndex}`];\n    setWorkList(newObj);\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(workList).map((key) => (\n        <div className=\"workExp--block\" key={key} name={`work_${key}`}>\n          <RenderTextInput\n            passedObj={workList[key]}\n            handler={handleChange}\n            index={key}\n          />\n          <WorkResp jobNumber={key} />\n          <button type=\"button\" onClick={removeWork}>\n            Remove Work\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={addWork}>\n        Add\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default WorkExp;\n"]},"metadata":{},"sourceType":"module"}