{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkExp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport WorkResponsibilities from \"./WorkResponsibilities\";\nimport RenderTextInput from \"./RenderTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkExp() {\n  _s();\n\n  const initialWork = {\n    company: {\n      className: \"cool\",\n      placeholder: \"Company\",\n      value: \"Google\"\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"Software Engineer\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"2021-2\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"2022-2\"\n    }\n  };\n  const [work, setWork] = useState(initialWork);\n  const [workList, setWorkList] = useState([work]);\n\n  const handleWork = e => {\n    setWork(prevWork => {\n      return { ...prevWork,\n        [e.target.id]: { ...prevWork[e.target.id],\n          value: e.target.value\n        }\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RenderTextInput, {\n      passedObj: work,\n      handler: handleWOrk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkExp, \"s8hTx6AedcJrU8ierABjlCaKsQI=\");\n\n_c = WorkExp;\nexport default WorkExp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExp\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkExp.js"],"names":["React","useState","uniqid","WorkResponsibilities","RenderTextInput","WorkExp","initialWork","company","className","placeholder","value","position","start","end","work","setWork","workList","setWorkList","handleWork","e","prevWork","target","id","handleWOrk"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,MADJ;AAEPC,MAAAA,WAAW,EAAE,SAFN;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADS;AAMlBC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,WAAW,EAAE,UADL;AAERC,MAAAA,KAAK,EAAE;AAFC,KANQ;AAUlBE,IAAAA,KAAK,EAAE;AACLH,MAAAA,WAAW,EAAE,YADR;AAELC,MAAAA,KAAK,EAAE;AAFF,KAVW;AAclBG,IAAAA,GAAG,EAAE;AACHJ,MAAAA,WAAW,EAAE,UADV;AAEHC,MAAAA,KAAK,EAAE;AAFJ;AAda,GAApB;AAoBA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACK,WAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAACa,IAAD,CAAD,CAAxC;;AAEA,QAAMI,UAAU,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,OAAO,CAAEK,QAAD,IAAc;AACpB,aAAO,EACL,GAAGA,QADE;AAEL,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAe,EACb,GAAGF,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CADE;AAEbZ,UAAAA,KAAK,EAAES,CAAC,CAACE,MAAF,CAASX;AAFH;AAFV,OAAP;AAOD,KARM,CAAP;AASD,GAVD;;AAYA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEI,IAA5B;AAAkC,MAAA,OAAO,EAAES;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzCQlB,O;;KAAAA,O;AA2CT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport WorkResponsibilities from \"./WorkResponsibilities\";\nimport RenderTextInput from \"./RenderTextInput\"\n\nfunction WorkExp() {\n  const initialWork = {\n    company: {\n      className: \"cool\",\n      placeholder: \"Company\",\n      value: \"Google\",\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"Software Engineer\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"2021-2\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"2022-2\",\n    },\n  };\n\n  const [work, setWork] = useState(initialWork);\n  const [workList, setWorkList] = useState([work]);\n\n  const handleWork = (e) => {\n    setWork((prevWork) => {\n      return {\n        ...prevWork,\n        [e.target.id]: {\n          ...prevWork[e.target.id],\n          value: e.target.value,\n        },\n      };\n    });\n  };\n\n  return (\n    <div>\n      <RenderTextInput passedObj={work} handler={handleWOrk }/>\n    </div>\n  );\n}\n\nexport default WorkExp;\n"]},"metadata":{},"sourceType":"module"}