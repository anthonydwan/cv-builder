{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/RenderCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DotPoint from \"./DotPoint\";\nimport RenderTextInput from \"./RenderTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderCard() {\n  _s();\n\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\"\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initialWork = { ...workTemplate,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [cardNum, addNum] = useState(0);\n  const [workList, setWorkList] = useState({\n    [jobNum]: initialWork\n  });\n\n  const addWork = e => {\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobNum + 1]: workTemplate\n    }));\n    addjobNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  const removeWork = e => {\n    const currWorkName = e.target.parentNode.getAttribute(\"data-name\");\n    const [_, jobIndex] = currWorkName.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, workList);\n    delete newObj[`${jobIndex}`];\n    setWorkList(newObj);\n  };\n\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\"\n  };\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${cardNum}_${respNum}`]: Resp\n  });\n\n  const addResp = () => {\n    setRespList(prevRespList => ({ ...prevRespList,\n      [`${cardNum}_${respNum + 1}`]: Resp\n    }));\n    addRespNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const removeResp = e => {\n    const currResp = e.target.previousElementSibling;\n    const [_, jobIndex, respIndex] = currResp.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, respList);\n    delete newObj[`${jobIndex}_${respIndex}`];\n    setRespList(newObj);\n  };\n\n  const changeResp = e => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    setRespList(prevRespList => ({ ...prevRespList,\n      [`${jobIndex}_${respIndex}`]: { ...prevRespList[`${jobIndex}_${respIndex}`],\n        value: e.target.value\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [Object.keys(workList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workExp--block\",\n      \"data-name\": `work_${key}`,\n      children: [/*#__PURE__*/_jsxDEV(RenderTextInput, {\n        passedObj: workList[key],\n        handler: handleChange,\n        index: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DotPoint, {\n        dotptList: respList,\n        addHandler: addResp,\n        removeHandler: removeResp,\n        changeHandler: changeResp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: removeWork,\n        children: \"Remove Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RenderCard, \"n9YKGFP/xLHkSrgjuOXori5c12E=\");\n\n_c = RenderCard;\nexport default RenderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderCard\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/RenderCard.js"],"names":["React","useState","DotPoint","RenderTextInput","RenderCard","workTemplate","company","placeholder","value","position","start","end","initialWork","cardNum","addNum","workList","setWorkList","jobNum","addWork","e","prevWorkList","addjobNum","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","removeWork","currWorkName","parentNode","getAttribute","_","newObj","Object","assign","Resp","respNum","addRespNum","respList","setRespList","addResp","prevRespList","removeResp","currResp","previousElementSibling","respIndex","changeResp","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport DotPoint from \"./DotPoint\";\nimport RenderTextInput from \"./RenderTextInput\";\n\nfunction RenderCard() {\n  const workTemplate = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\",\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\",\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\",\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\",\n    },\n  };\n\n  const initialWork = {\n    ...workTemplate,\n    company: {\n      value: \"Google\",\n    },\n    position: {\n      value: \"Software Engineer\",\n    },\n    start: {\n      value: \"2021-2\",\n    },\n    end: {\n      value: \"2022-2\",\n    },\n  };\n\n  const [cardNum, addNum] = useState(0);\n  const [workList, setWorkList] = useState({ [jobNum]: initialWork });\n\n  const addWork = (e) => {\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobNum + 1]: workTemplate,\n    }));\n    addjobNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const handleChange = (e) => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobIndex]: {\n        ...prevWorkList[jobIndex],\n        [inputBox]: {\n          ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  const removeWork = (e) => {\n    const currWorkName = e.target.parentNode.getAttribute(\"data-name\");\n    const [_, jobIndex] = currWorkName.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, workList);\n    delete newObj[`${jobIndex}`];\n    setWorkList(newObj);\n  };\n\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\",\n  };\n\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [`${cardNum}_${respNum}`]: Resp,\n  });\n\n  const addResp = () => {\n    setRespList((prevRespList) => ({\n      ...prevRespList,\n      [`${cardNum}_${respNum + 1}`]: Resp,\n    }));\n    addRespNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const removeResp = (e) => {\n    const currResp = e.target.previousElementSibling;\n    const [_, jobIndex, respIndex] = currResp.name.split(\"_\");\n    const newObj = {};\n    Object.assign(newObj, respList);\n    delete newObj[`${jobIndex}_${respIndex}`];\n    setRespList(newObj);\n  };\n\n  const changeResp = (e) => {\n    const [_, jobIndex, respIndex] = e.target.name.split(\"_\");\n    setRespList((prevRespList) => ({\n      ...prevRespList,\n      [`${jobIndex}_${respIndex}`]: {\n        ...prevRespList[`${jobIndex}_${respIndex}`],\n        value: e.target.value,\n      },\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(workList).map((key) => (\n        <div className=\"workExp--block\" key={key} data-name={`work_${key}`}>\n          <RenderTextInput\n            passedObj={workList[key]}\n            handler={handleChange}\n            index={key}\n          />\n          <DotPoint\n            dotptList={respList}\n            addHandler={addResp}\n            removeHandler={removeResp}\n            changeHandler={changeResp}\n          />\n          <button type=\"button\" onClick={removeWork}>\n            Remove Work\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={addWork}>\n        Add Work\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default RenderCard;\n"]},"metadata":{},"sourceType":"module"}