{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Education.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RenderTextInput from './RenderTextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Education() {\n  _s();\n\n  const eduTemplate = {\n    company: {\n      placeholder: \"Company\",\n      value: \"\"\n    },\n    position: {\n      placeholder: \"Position\",\n      value: \"\"\n    },\n    start: {\n      placeholder: \"Start Date\",\n      value: \"\"\n    },\n    end: {\n      placeholder: \"End Date\",\n      value: \"\"\n    }\n  };\n  const initialWork = { ...eduTemplate,\n    company: {\n      value: \"Google\"\n    },\n    position: {\n      value: \"Software Engineer\"\n    },\n    start: {\n      value: \"2021-2\"\n    },\n    end: {\n      value: \"2022-2\"\n    }\n  };\n  const [jobNum, addjobNum] = useState(0);\n  const [workList, setWorkList] = useState({\n    [jobNum]: initialWork\n  });\n\n  const addWork = e => {\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobNum + 1]: eduTemplate\n    }));\n    addjobNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setWorkList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(workList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workExp--block\",\n      children: [/*#__PURE__*/_jsxDEV(RenderTextInput, {\n        passedObj: workList[key],\n        handler: handleChange,\n        index: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(WorkResp, {\n        jobNumber: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Education, \"pLV67m0vjclnuHbCqtAWF90FJ78=\");\n\n_c = Education;\nexport default Education;\n\nvar _c;\n\n$RefreshReg$(_c, \"Education\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/Education.js"],"names":["React","useState","RenderTextInput","Education","eduTemplate","company","placeholder","value","position","start","end","initialWork","jobNum","addjobNum","workList","setWorkList","addWork","e","prevWorkList","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport RenderTextInput from './RenderTextInput';\n\nfunction Education() {\n\tconst eduTemplate = {\n\t  company: {\n\t\tplaceholder: \"Company\",\n\t\tvalue: \"\",\n\t  },\n\t  position: {\n\t\tplaceholder: \"Position\",\n\t\tvalue: \"\",\n\t  },\n\t  start: {\n\t\tplaceholder: \"Start Date\",\n\t\tvalue: \"\",\n\t  },\n\t  end: {\n\t\tplaceholder: \"End Date\",\n\t\tvalue: \"\",\n\t  },\n\t};\n  \n\tconst initialWork = {\n\t  ...eduTemplate,\n\t  company: {\n\t\tvalue: \"Google\",\n\t  },\n\t  position: {\n\t\tvalue: \"Software Engineer\",\n\t  },\n\t  start: {\n\t\tvalue: \"2021-2\",\n\t  },\n\t  end: {\n\t\tvalue: \"2022-2\",\n\t  },\n\t};\n  \n\tconst [jobNum, addjobNum] = useState(0);\n\tconst [workList, setWorkList] = useState({ [jobNum]: initialWork });\n  \n\tconst addWork = (e) => {\n\t  setWorkList((prevWorkList) => ({\n\t\t...prevWorkList,\n\t\t[jobNum + 1]: eduTemplate,\n\t  }));\n\t  addjobNum((prevJobNum) => prevJobNum + 1);\n\t};\n  \n\tconst handleChange = (e) => {\n\t  const [inputBox, jobIndex] = e.target.name.split(\"_\");\n\t  setWorkList((prevWorkList) => ({\n\t\t...prevWorkList,\n\t\t[jobIndex]: {\n\t\t  ...prevWorkList[jobIndex],\n\t\t  [inputBox]: {\n\t\t\t...prevWorkList[jobIndex][inputBox],\n\t\t\tvalue: e.target.value,\n\t\t  },\n\t\t},\n\t  }));\n\t};\n  \n\treturn (\n\t  <div>\n\t\t{Object.keys(workList).map((key) => (\n\t\t  <div className=\"workExp--block\" key={key}>\n\t\t\t<RenderTextInput\n\t\t\t  passedObj={workList[key]}\n\t\t\t  handler={handleChange}\n\t\t\t  index={key}\n\t\t\t/>\n\t\t\t<WorkResp jobNumber={key} />\n\t\t  </div>\n\t\t))}\n\t\t<button type=\"button\" onClick={addWork}>\n\t\t  Add\n\t\t</button>\n\t  </div>\n\t);\n  }\n  \n\nexport default Education\n"]},"metadata":{},"sourceType":"module"}