{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewDoc.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDoc(props) {\n  const {\n    workList,\n    respList\n  } = props.workSection;\n  const {\n    eduList,\n    eduDescList\n  } = props.eduSection;\n  const {\n    otherList,\n    otherDescList\n  } = props.otherSection;\n\n  const selectSubs = (key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n\n    if (primary === key) {\n      return renderDP(respList, key, subKey);\n    }\n  };\n\n  const renderDP = (respList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(respList).filter(sub => sub.split(\"_\")[0] === key).length;\n\n    if (DPcount === 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: respList[subKey].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: respList[subKey].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view--block\",\n    children: Object.keys(workList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--work\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--titleBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--institution\",\n            children: workList[key].company.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: workList[key].position.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this), \"- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), Object.keys(respList).map(subKey => selectSubs(key, subKey))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ViewDoc;\nexport default ViewDoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDoc\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewDoc.js"],"names":["React","ViewDoc","props","workList","respList","workSection","eduList","eduDescList","eduSection","otherList","otherDescList","otherSection","selectSubs","key","subKey","primary","split","renderDP","DPcount","Object","keys","filter","sub","length","value","map","company","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAAK,CAACG,WAArC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2BL,KAAK,CAACM,UAAvC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA+BR,KAAK,CAACS,YAA3C;;AAEA,QAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAClC,UAAMC,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAhB;;AACA,QAAID,OAAO,KAAKF,GAAhB,EAAqB;AACnB,aAAOI,QAAQ,CAACb,QAAD,EAAWS,GAAX,EAAgBC,MAAhB,CAAf;AACD;AACF,GALD;;AAOA,QAAMG,QAAQ,GAAG,CAACb,QAAD,EAAWS,GAAX,EAAgBC,MAAhB,KAA2B;AAC1C;AACA,UAAMI,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBiB,MAAtB,CACbC,GAAD,IAASA,GAAG,CAACN,KAAJ,CAAU,GAAV,EAAe,CAAf,MAAsBH,GADjB,EAEdU,MAFF;;AAGA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACjB,0BAAO;AAAA,kBAAId,QAAQ,CAACU,MAAD,CAAR,CAAiBU;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA,+BACE;AAAA,oBAAKpB,QAAQ,CAACU,MAAD,CAAR,CAAiBU;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGL,MAAM,CAACC,IAAP,CAAYjB,QAAZ,EAAsBsB,GAAtB,CAA2BZ,GAAD,iBACzB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,mBAAhB;AAAA,sBACGV,QAAQ,CAACU,GAAD,CAAR,CAAca,OAAd,CAAsBF;AADzB;AAAA;AAAA;AAAA;AAAA,kBADF,qBAII;AAAA,sBAAOrB,QAAQ,CAACU,GAAD,CAAR,CAAcc,QAAd,CAAuBH;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,kCAAK;AAAA;AAAA;AAAA;AAAA,kBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWGL,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBqB,GAAtB,CAA2BX,MAAD,IAAYF,UAAU,CAACC,GAAD,EAAMC,MAAN,CAAhD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KA/CQb,O;AAiDT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nfunction ViewDoc(props) {\n  const { workList, respList } = props.workSection;\n  const { eduList, eduDescList } = props.eduSection;\n  const { otherList, otherDescList } = props.otherSection;\n\n  const selectSubs = (key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n    if (primary === key) {\n      return renderDP(respList, key, subKey);\n    }\n  };\n\n  const renderDP = (respList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(respList).filter(\n      (sub) => sub.split(\"_\")[0] === key\n    ).length;\n    if (DPcount === 1) {\n      return <p>{respList[subKey].value}</p>;\n    } else {\n      return (\n        <ul>\n          <li>{respList[subKey].value}</li>\n        </ul>\n      );\n    }\n  };\n\n  return (\n    <div className=\"view--block\">\n      {Object.keys(workList).map((key) => (\n        <div className=\"view--work\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--institution\">\n                {workList[key].company.value}\n              </span>\n              , <span>{workList[key].position.value}</span>\n            </div>\n            <div><span></span>- </div>\n          </div>\n\n          {Object.keys(respList).map((subKey) => selectSubs(key, subKey))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ViewDoc;\n"]},"metadata":{},"sourceType":"module"}