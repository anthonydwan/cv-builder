{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RenderTextInput from \"./RenderTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkResponsibilities(props) {\n  _s();\n\n  const {\n    jobNumber\n  } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\"\n  };\n  const initialResp = { ...Resp,\n    value: \"Involved in the implementation of the new feature on Chrome.\"\n  };\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({\n    [respNum]: initialResp\n  });\n\n  const addWork = e => {\n    setRespList(prevRespList => ({ ...prevRespList,\n      [respNum + 1]: Resp\n    }));\n    addRespNum(prevJobNum => prevJobNum + 1);\n  };\n\n  const handleChange = e => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setRespList(prevWorkList => ({ ...prevWorkList,\n      [jobIndex]: { ...prevWorkList[jobIndex],\n        [inputBox]: { ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [Object.keys(respList).map((key, index) => /*#__PURE__*/_jsxDEV(RenderTextInput, {\n      passedObj: respList[key],\n      handler: handleChange,\n      index: `${jobNum}_${index}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWork,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkResponsibilities, \"H1DJH22edJcWHz5ZlLembzjhIB4=\");\n\n_c = WorkResponsibilities;\nexport default WorkResponsibilities;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkResponsibilities\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/FormComponents/WorkResponsibilities.js"],"names":["React","useState","RenderTextInput","WorkResponsibilities","props","jobNumber","Resp","placeholder","value","initialResp","respNum","addRespNum","respList","setRespList","addWork","e","prevRespList","prevJobNum","handleChange","inputBox","jobIndex","target","name","split","prevWorkList","Object","keys","map","key","index","jobNum"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAME,IAAI,GAAG;AACXC,IAAAA,WAAW,EAAE,eADF;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAb;AAKA,QAAMC,WAAW,GAAG,EAClB,GAAGH,IADe;AAElBE,IAAAA,KAAK,EAAE;AAFW,GAApB;AAKA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAAE,KAACS,OAAD,GAAWD;AAAb,GAAD,CAAxC;;AAEA,QAAMK,OAAO,GAAIC,CAAD,IAAO;AACrBF,IAAAA,WAAW,CAAEG,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACN,OAAO,GAAG,CAAX,GAAeJ;AAFc,KAAnB,CAAD,CAAX;AAIAK,IAAAA,UAAU,CAAEM,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAV;AACD,GAND;;AAQA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B,UAAM,CAACI,QAAD,EAAWC,QAAX,IAAuBL,CAAC,CAACM,MAAF,CAASC,IAAT,CAAcC,KAAd,CAAoB,GAApB,CAA7B;AACAV,IAAAA,WAAW,CAAEW,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACJ,QAAD,GAAY,EACV,GAAGI,YAAY,CAACJ,QAAD,CADL;AAEV,SAACD,QAAD,GAAY,EACV,GAAGK,YAAY,CAACJ,QAAD,CAAZ,CAAuBD,QAAvB,CADO;AAEVX,UAAAA,KAAK,EAAEO,CAAC,CAACM,MAAF,CAASb;AAFN;AAFF;AAFiB,KAAnB,CAAD,CAAX;AAUD,GAZD;;AAcA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGiB,MAAM,CAACC,IAAP,CAAYd,QAAZ,EAAsBe,GAAtB,CAA0B,CAACC,GAAD,EAAMC,KAAN,kBACzB,QAAC,eAAD;AACE,MAAA,SAAS,EAAEjB,QAAQ,CAACgB,GAAD,CADrB;AAEE,MAAA,OAAO,EAAEV,YAFX;AAGE,MAAA,KAAK,EAAG,GAAEY,MAAO,IAAGD,KAAM;AAH5B;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEf,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnDQX,oB;;KAAAA,oB;AAqDT,eAAeA,oBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport RenderTextInput from \"./RenderTextInput\";\n\nfunction WorkResponsibilities(props) {\n  const { jobNumber } = props;\n  const Resp = {\n    placeholder: \"Reponsibility\",\n    value: \"\",\n  };\n\n  const initialResp = {\n    ...Resp,\n    value: \"Involved in the implementation of the new feature on Chrome.\",\n  };\n\n  const [respNum, addRespNum] = useState(0);\n  const [respList, setRespList] = useState({ [respNum]: initialResp });\n\n  const addWork = (e) => {\n    setRespList((prevRespList) => ({\n      ...prevRespList,\n      [respNum + 1]: Resp,\n    }));\n    addRespNum((prevJobNum) => prevJobNum + 1);\n  };\n\n  const handleChange = (e) => {\n    const [inputBox, jobIndex] = e.target.name.split(\"_\");\n    setRespList((prevWorkList) => ({\n      ...prevWorkList,\n      [jobIndex]: {\n        ...prevWorkList[jobIndex],\n        [inputBox]: {\n          ...prevWorkList[jobIndex][inputBox],\n          value: e.target.value,\n        },\n      },\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(respList).map((key, index) => (\n        <RenderTextInput\n          passedObj={respList[key]}\n          handler={handleChange}\n          index={`${jobNum}_${index}`}\n        />\n      ))}\n      <button type=\"button\" onClick={addWork}>\n        Add\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default WorkResponsibilities;\n"]},"metadata":{},"sourceType":"module"}