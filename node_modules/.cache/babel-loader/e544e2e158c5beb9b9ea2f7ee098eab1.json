{"ast":null,"code":"var _jsxFileName = \"/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewRender.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewRender(props) {\n  const {\n    title,\n    sectionList,\n    subsectionList,\n    int\n  } = props;\n  console.log(props);\n\n  const conditionalDate = key => {\n    const start = key.start.value;\n    const end = key.end.value;\n\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (subsectionList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(subsectionList).filter(sub => sub.split(\"_\")[0] === key).length;\n\n    if (DPcount === 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"view--subsection\",\n        children: subsectionList[subKey].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"view--subsection\",\n          children: subsectionList[subKey].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), Object.keys(sectionList).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view--section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view--titleBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--section\",\n            children: sectionList[key].university.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view--section\",\n            children: sectionList[key].degree.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [sectionList[key].start.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), conditionalDate(sectionList[key]), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [sectionList[key].end.value, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), Object.keys(subsectionList).map(subKey => selectSubs(subsectionList, key, subKey))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ViewRender;\nexport default ViewRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewRender\");","map":{"version":3,"sources":["/home/anthony/the_odin_project/odin_CV_builder/cv-project/src/components/ViewRender.js"],"names":["React","ViewRender","props","title","sectionList","subsectionList","int","console","log","conditionalDate","key","start","value","end","selectSubs","list","subKey","primary","split","renderDP","DPcount","Object","keys","filter","sub","length","map","university","degree"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction ViewRender(props) {\n  const { title, sectionList, subsectionList, int,  } = props;\n\n\tconsole.log(props);\n\n\n  const conditionalDate = (key) => {\n    const start = key.start.value;\n    const end = key.end.value;\n    if (start && start !== \"\" && end && end !== \"\") {\n      return \" to \";\n    } else {\n      return \"\";\n    }\n  };\n\n  const selectSubs = (list, key, subKey) => {\n    const primary = subKey.split(\"_\")[0];\n    if (primary === key) {\n      return renderDP(list, key, subKey);\n    }\n  };\n\n  const renderDP = (subsectionList, key, subKey) => {\n    // we find the number of dotpoints, if only one, use paragraph instead\n    const DPcount = Object.keys(subsectionList).filter(\n      (sub) => sub.split(\"_\")[0] === key\n    ).length;\n    if (DPcount === 1) {\n      return <p className=\"view--subsection\">{subsectionList[subKey].value}</p>;\n    } else {\n      return (\n        <ul>\n          <li className=\"view--subsection\">{subsectionList[subKey].value}</li>\n        </ul>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h2>{title}</h2>\n      <hr />\n      {Object.keys(sectionList).map((key) => (\n        <div className=\"view--section\">\n          <div className=\"view--titleBlock\">\n            <div>\n              <span className=\"view--section\">\n                {sectionList[key].university.value}\n              </span>\n              {\", \"}\n              <span className=\"view--section\">\n                {sectionList[key].degree.value}\n              </span>\n            </div>\n            <div>\n              <span>{sectionList[key].start.value} </span>\n              {conditionalDate(sectionList[key])}\n              <span>{sectionList[key].end.value} </span>\n            </div>\n          </div>\n\n          {Object.keys(subsectionList).map((subKey) =>\n            selectSubs(subsectionList, key, subKey)\n          )}\n        </div>\n      ))}\n    </React.Fragment>\n  );\n}\n\nexport default ViewRender;\n"]},"metadata":{},"sourceType":"module"}